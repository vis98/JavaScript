function flattenObject(obj, parentKey = '') {
  let result = {};

  for (const key in obj) {
    if (obj.hasOwnProperty(key)) {
      const newKey = parentKey ? `${parentKey}.${key}` : key;

      if (Array.isArray(obj[key])) {
        obj[key].forEach((item, index) => {
          const arrayKey = `${newKey}[${index}]`;
          if (typeof item === 'object') {
            const flattened = flattenObject(item, arrayKey);
            result = { ...result, ...flattened };
          } else {
            result[arrayKey] = item;
          }
        });
      } else if (typeof obj[key] === 'object') {
        const flattened = flattenObject(obj[key], newKey);
        result = { ...result, ...flattened };
      } else {
        result[newKey] = obj[key];
      }
    }
  }

  return result;
}
